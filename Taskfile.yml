# ctrlsys Root Taskfile

version: '3'

vars:
  PROJECT_NAME: ctrlsys

tasks:
  # Default task - show available tasks
  default:
    desc: "List all available tasks"
    cmds:
      - task: logo
      - task --list-all
    silent: true

  logo:
    desc: "Print the ctrlsys logo"
    cmds:
      - cat ./logo
    silent: true

  # Build tasks
  build:
    desc: "Build both binaries (server + cli)"
    cmds:
      - echo "Building server..."
      - cargo build --bin server --features server
      - echo "Building CLI..."
      - cargo build --bin cli --features cli

  build:release:
    desc: "Build both binaries in release mode"
    cmds:
      - echo "Building server (release)..."
      - cargo build --bin server --features server --release
      - echo "Building CLI (release)..."
      - cargo build --bin cli --features cli --release

  build:lib:
    desc: "Build the library only"
    cmds:
      - cargo build --lib

  # Test tasks
  test:
    desc: "Run all tests"
    cmds:
      - cargo test --lib
      - cargo test --bin server --features server
      - cargo test --bin cli --features cli

  # Code quality tasks
  fmt:
    desc: "Format all code"
    cmds:
      - cargo fmt --all

  clippy:
    desc: "Lint all code with clippy"
    cmds:
      - cargo clippy --lib -- -D warnings
      - cargo clippy --bin server --features server -- -D warnings
      - cargo clippy --bin cli --features cli -- -D warnings

  check:
    desc: "Check all code (fmt + clippy + test)"
    cmds:
      - task: fmt
      - task: clippy
      - task: test

  # Development workflow
  dev:
    desc: "Full development cycle (check + build)"
    cmds:
      - task: check
      - task: build
      - echo "All checks passed, binaries built"

  # Cleanup
  clean:
    desc: "Clean all build artifacts"
    cmds:
      - cargo clean
      - rm -rf target/

  # Watch mode
  watch:server:
    desc: "Watch and rebuild server on changes"
    cmds:
      - cargo watch -x "build --bin server --features server"

  watch:cli:
    desc: "Watch and rebuild CLI on changes"
    cmds:
      - cargo watch -x "build --bin cli --features cli"

  # Server tasks
  server:run:
    desc: "Run the server (requires DATABASE_URL)"
    cmds:
      - cargo run --bin server --features server

  server:build:
    desc: "Build the server"
    cmds:
      - cargo build --bin server --features server

  server:release:
    desc: "Build server in release mode"
    cmds:
      - cargo build --bin server --features server --release

  # CLI tasks
  cli:run:
    desc: "Run the CLI (use CLI_ARGS='...' for arguments)"
    cmds:
      - cargo run --bin cli --features cli -- {{.CLI_ARGS}}

  cli:build:
    desc: "Build the CLI"
    cmds:
      - cargo build --bin cli --features cli

  cli:release:
    desc: "Build CLI in release mode"
    cmds:
      - cargo build --bin cli --features cli --release

  # Installation tasks
  install:cli:
    desc: "Install CLI to ~/.local/bin as 'ctrlsys' with 'cs' alias"
    cmds:
      - echo "Building CLI in release mode..."
      - cargo build --bin cli --features cli --release
      - echo "Installing to ~/.local/bin..."
      - mkdir -p ~/.local/bin
      - cp target/release/cli ~/.local/bin/ctrlsys
      - ln -sf ~/.local/bin/ctrlsys ~/.local/bin/cs
      - |
        echo "Installed successfully!"
        echo "  Binary: ~/.local/bin/ctrlsys"
        echo "  Alias:  ~/.local/bin/cs"
        echo ""
        echo "Make sure ~/.local/bin is in your PATH"

  uninstall:cli:
    desc: "Uninstall CLI from ~/.local/bin"
    cmds:
      - rm -f ~/.local/bin/ctrlsys
      - rm -f ~/.local/bin/cs
      - echo "Uninstalled ctrlsys and cs"

  install:
    desc: "Install CLI (alias for install:cli)"
    cmds:
      - task: install:cli

  uninstall:
    desc: "Uninstall CLI (alias for uninstall:cli)"
    cmds:
      - task: uninstall:cli

  # Quick aliases
  b:
    desc: "Build (alias)"
    cmds:
      - task: build

  t:
    desc: "Test (alias)"
    cmds:
      - task: test

  c:
    desc: "Check (alias)"
    cmds:
      - task: check

  r:server:
    desc: "Run server (alias)"
    cmds:
      - task: server:run

  r:cli:
    desc: "Run CLI (alias)"
    cmds:
      - task: cli:run
