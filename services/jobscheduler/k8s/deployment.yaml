apiVersion: apps/v1
kind: Deployment
metadata:
  name: jobscheduler
  labels:
    app: jobscheduler
    component: scheduler
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jobscheduler
  template:
    metadata:
      labels:
        app: jobscheduler
        component: scheduler
        version: v1
    spec:
      serviceAccountName: jobscheduler
      containers:
      - name: jobscheduler
        image: jobscheduler:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: grpc
          containerPort: 50054
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        env:
        - name: GRPC_PORT
          value: "50054"
        - name: METRICS_PORT
          value: "8080"
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IN_CLUSTER
          value: "true"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        - name: TIMER_CONTROL_PLANE_ENDPOINT
          value: "http://control-plane-service:50053"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - /app/jobscheduler
            - health
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /app/jobscheduler
            - health
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1000
      restartPolicy: Always