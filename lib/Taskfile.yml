# Shared Library Tasks

version: '3'

vars:
  LIB_NAME: ctrlsys-lib

tasks:
  # Build tasks
  build:
    desc: "🏗️ Build shared library"
    cmds:
      - cargo build

  build:release:
    desc: "🏗️ Build shared library (release)"
    cmds:
      - cargo build --release

  # Test tasks
  test:
    desc: "🧪 Run library tests"
    cmds:
      - cargo test

  test:doc:
    desc: "🧪 Run documentation tests"
    cmds:
      - cargo test --doc

  # Code quality
  fmt:
    desc: "🎨 Format library code"
    cmds:
      - cargo fmt

  clippy:
    desc: "🔍 Run clippy on library"
    cmds:
      - cargo clippy -- -D warnings

  check:
    desc: "✅ Check library (fmt + clippy + test)"
    cmds:
      - task: fmt
      - task: clippy
      - task: test

  # Documentation
  docs:
    desc: "📚 Generate and open documentation"
    cmds:
      - cargo doc --open --no-deps

  docs:build:
    desc: "📚 Build documentation"
    cmds:
      - cargo doc --no-deps

  # Development
  watch:
    desc: "👀 Watch and rebuild library"
    cmds:
      - cargo watch -x build

  watch:test:
    desc: "👀 Watch and test library"
    cmds:
      - cargo watch -x test

  watch:doc:
    desc: "👀 Watch and build docs"
    cmds:
      - cargo watch -x "doc --no-deps"

  # Benchmarks
  bench:
    desc: "⚡ Run benchmarks"
    cmds:
      - cargo bench

  # Examples
  examples:
    desc: "📝 Run all examples"
    cmds:
      - cargo run --example basic
      - cargo run --example advanced

  example:
    desc: "📝 Run specific example"
    cmds:
      - cargo run --example {{.EXAMPLE}}

  # Publishing (if this becomes a public crate)
  publish:dry:
    desc: "📦 Dry run publish"
    cmds:
      - cargo publish --dry-run

  publish:
    desc: "📦 Publish to crates.io"
    cmds:
      - cargo publish

  # Cleanup
  clean:
    desc: "🧹 Clean library build artifacts"
    cmds:
      - cargo clean
      - rm -rf target/

  # Development shortcuts
  dev:
    desc: "🚀 Quick development cycle"
    cmds:
      - task: check
      - task: docs:build